<% layout("./layouts/boilerPlate") %>

<style>
  body {
    background: linear-gradient(to right, #141e30, #243b55);
  }

  .test-container {
    padding: 50px 20px;
    max-width: 900px;
    margin: auto;
  }

  .test-box {
    background: #ffffff;
    padding: 40px 30px;
    border-radius: 18px;
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
  }

  .timer {
    font-size: 1.6rem;
    font-weight: bold;
    color: #e74c3c;
    text-align: center;
    margin-bottom: 30px;
  }

  label {
    font-weight: 600;
    margin-bottom: 6px;
    display: inline-block;
  }

  input, textarea {
    font-size: 1rem;
  }

  textarea {
    resize: vertical;
    font-family: monospace;
  }

  .btn-submit {
    margin-top: 30px;
    width: 100%;
    font-size: 1.1rem;
    padding: 12px;
    border-radius: 10px;
    font-weight: 600;
  }

  @media (max-width: 576px) {
    .test-box {
      padding: 30px 20px;
    }

    .timer {
      font-size: 1.3rem;
    }
  }
</style>

<div class="test-container">
  <div class="test-box">
    <div class="timer" id="timer">⏳ Time Left: 03:00:00</div>

    <form id="testForm" action="/submitTest" method="POST">
      <div class="mb-4">
        <label for="testName">📝 Test Name (Optional)</label>
        <input type="text" name="testName" class="form-control" placeholder="e.g. Physics Mock 12">
      </div>

      <div class="mb-4">
        <label for="testDate">📅 Test Date</label>
        <input type="date" name="testDate" class="form-control" required>
      </div>

      <div class="mb-4">
        <label for="numOfQues">🔢 Total Number of Questions</label>
        <input type="number" name="numOfQues" class="form-control" required>
      </div>

      <!-- OCR Image Upload -->
<div class="mb-4">
  <label for="ocrImage" class="form-label">
    <span class="form-icon">📷</span> Upload Answer Key Image (optional):
  </label>
  <input type="file" class="form-control" id="ocrImage" accept="image/*">
</div>

<!-- OCR Progress -->
<div class="mb-4" id="ocrStatus" style="font-weight: 500; color: #007bff;"></div>


      <div class="mb-4">
        <label for="correctAnswers">📄 Answer Key (comma-separated)</label>
        <textarea name="correctAnswers" class="form-control" rows="4" required placeholder="e.g. 1,2,3,4,1,..."></textarea>
      </div>

      <div class="mb-4">
        <label for="yourAnswers">✍️ Your Answers (comma-separated, use 0 for skipped)</label>
        <textarea name="yourAnswers" class="form-control" rows="4" required placeholder="e.g. 1,0,3,4,2,..."></textarea>
      </div>

      <button type="submit" class="btn btn-success btn-submit">✅ Submit Test</button>
    </form>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/tesseract.js@4.0.2/dist/tesseract.min.js"></script>
<script>
  // Existing Timer Logic
  let timeLeft = 3 * 60 * 60;
  function updateTimerDisplay() {
    let hrs = String(Math.floor(timeLeft / 3600)).padStart(2, '0');
    let mins = String(Math.floor((timeLeft % 3600) / 60)).padStart(2, '0');
    let secs = String(timeLeft % 60).padStart(2, '0');
    document.getElementById("timer").textContent = `Time Left: ${hrs}:${mins}:${secs}`;
  }
  updateTimerDisplay();
  const countdown = setInterval(() => {
    timeLeft--;
    updateTimerDisplay();
    if (timeLeft <= 0) {
      clearInterval(countdown);
      alert("⏰ Time's up! Submitting your test.");
      document.getElementById("testForm").submit();
    }
  }, 1000);

  // OCR Logic
  const ocrInput = document.getElementById("ocrImage");
  const ocrStatus = document.getElementById("ocrStatus");
  const correctAnsBox = document.querySelector("textarea[name='correctAnswers']");

  ocrInput.addEventListener("change", async () => {
    if (!ocrInput.files[0]) return;

    ocrStatus.textContent = "🧠 Extracting answer key... Please wait";

    const result = await Tesseract.recognize(ocrInput.files[0], 'eng', {
      logger: m => {
        if (m.status === 'recognizing text') {
          ocrStatus.textContent = `🔍 Processing... ${Math.floor(m.progress * 100)}%`;
        }
      }
    });

    const text = result.data.text;

    // Extract answer key numbers using regex
    const matches = text.match(/\((\d)\)/g);
    if (matches) {
      const numbers = matches.map(match => Number(match.replace(/[()]/g, '')));
      correctAnsBox.value = `[${numbers.join(", ")}]`;
      ocrStatus.textContent = "✅ Answer key extracted successfully!";
    } else {
      ocrStatus.textContent = "⚠️ Could not detect answers. Please check the image.";
    }
  });
</script>

