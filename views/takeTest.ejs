<% layout("./layouts/boilerPlate") %>

<style>
  body {
    background: linear-gradient(to right, #141e30, #243b55);
  }

  .test-container {
    padding: 50px 20px;
    max-width: 900px;
    margin: auto;
  }

  .test-box {
    background: #ffffff;
    padding: 40px 30px;
    border-radius: 18px;
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
  }

  .timer {
    font-size: 1.6rem;
    font-weight: bold;
    color: #e74c3c;
    text-align: center;
    margin-bottom: 30px;
  }

  label {
    font-weight: 600;
    margin-bottom: 6px;
    display: inline-block;
  }

  input, textarea {
    font-size: 1rem;
  }

  textarea {
    resize: vertical;
    font-family: monospace;
  }

  .btn-submit {
    margin-top: 30px;
    width: 100%;
    font-size: 1.1rem;
    padding: 12px;
    border-radius: 10px;
    font-weight: 600;
  }

  @media (max-width: 576px) {
    .test-box {
      padding: 30px 20px;
    }

    .timer {
      font-size: 1.3rem;
    }
  }
</style>

<div class="test-container">
  <div class="test-box">
    <div class="timer" id="timer">⏳ Time Left: 03:00:00</div>

    <form id="testForm" action="/submitTest" method="POST">
      <div class="mb-4">
        <label for="testName">📝 Test Name (Optional)</label>
        <input type="text" name="testName" class="form-control" placeholder="e.g. Physics Mock 12">
      </div>

      <div class="mb-4">
        <label for="testDate">📅 Test Date</label>
        <input type="date" name="testDate" class="form-control" required>
      </div>

      <div class="mb-4">
        <label for="numOfQues">🔢 Total Number of Questions</label>
        <input type="number" name="numOfQues" class="form-control" required>
      </div>

      <!-- OCR Image Upload -->
<div class="form-group">
  <label for="imageUpload">📷 Upload Answer Key Image</label>
  <input type="file" id="imageUpload" accept="image/*" class="form-control mb-3">
  <button type="button" id="extractBtn" class="btn btn-warning btn-sm mt-2">🔍 Extract Correct Answers</button>
</div>

<!-- OCR Progress -->
<div class="mb-4" id="ocrStatus" style="font-weight: 500; color: #007bff;"></div>


      <div class="mb-4">
        <label for="correctAnswers">📄 Answer Key (comma-separated)</label>
        <textarea name="correctAnswers" class="form-control" rows="4" required placeholder="e.g. 1,2,3,4,1,..."></textarea>
      </div>

      <div class="mb-4">
        <label for="yourAnswers">✍️ Your Answers (comma-separated, use 0 for skipped)</label>
        <textarea name="yourAnswers" class="form-control" rows="4" required placeholder="e.g. 1,0,3,4,2,..."></textarea>
      </div>

      <button type="submit" class="btn btn-success btn-submit">✅ Submit Test</button>
    </form>
  </div>
</div>

<!-- Tesseract.js CDN for OCR -->
<script type="module">
  import { createWorker } from 'https://cdn.jsdelivr.net/npm/tesseract.js@5.0.0/+esm';

  const extractBtn = document.getElementById("extractBtn");
  const fileInput = document.getElementById("imageUpload");

  extractBtn.addEventListener("click", async () => {
    const file = fileInput.files[0];

    if (!file) {
      alert("Please select an image first.");
      return;
    }

    const reader = new FileReader();
    reader.onload = async function (e) {
      const imageData = e.target.result;

      const worker = await createWorker({
        logger: m => console.log(m),
      });

      await worker.loadLanguage('eng');
      await worker.initialize('eng');
      await worker.setParameters({
        tessedit_char_whitelist: 'Q0123456789()'
      });

      const { data: { text } } = await worker.recognize(imageData);
      await worker.terminate();

      console.log("Raw OCR Text:\n", text);

      const regex = /Q\s*\d{1,3}[\s:.-]*\(?(\d)\)?/gi;
      let match;
      let extractedAnswers = [];

      while ((match = regex.exec(text)) !== null) {
        extractedAnswers.push(Number(match[1]));
      }

      if (extractedAnswers.length === 0) {
        alert("⚠️ Could not detect answers. Please check the image.");
      } else {
        alert("✅ Answers extracted successfully!");
        document.querySelector("textarea[name='correctAnswers']").value = JSON.stringify(extractedAnswers);
      }
    };

    reader.readAsDataURL(file);
  });

  // Timer logic (3 hours)
  let timeLeft = 3 * 60 * 60;

  function updateTimerDisplay() {
    let hrs = String(Math.floor(timeLeft / 3600)).padStart(2, '0');
    let mins = String(Math.floor((timeLeft % 3600) / 60)).padStart(2, '0');
    let secs = String(timeLeft % 60).padStart(2, '0');
    document.getElementById("timer").textContent = `Time Left: ${hrs}:${mins}:${secs}`;
  }

  updateTimerDisplay();

  const countdown = setInterval(() => {
    timeLeft--;
    updateTimerDisplay();

    if (timeLeft <= 0) {
      clearInterval(countdown);
      alert("⏰ Time's up! Submitting your test.");
      document.getElementById("testForm").submit();
    }
  }, 1000);
</script>
